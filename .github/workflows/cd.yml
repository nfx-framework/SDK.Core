name: Release

on:
  push:
    tags:
      - "*"

jobs:
  calculate-version:
    name: Calculate Version
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.14
        with:
          versionSpec: "5.x"

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.14
        with:
          useConfigFile: true
          configFilePath: ./.github/version.yml

  build:
    name: Build and Release
    runs-on: windows-latest
    needs: calculate-version
    env:
      SEMVER: ${{ needs.calculate-version.outputs.semVer }}
      ZipName: Nfx.SDK.Core-${{ needs.calculate-version.outputs.semVer }}.zip

    steps:
      - uses: actions/checkout@v2.4.2

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.6

      - name: Restore dependencies
        run: nuget restore Nfx.SDK.Core.sln

      - name: Build the solution
        run: msbuild Nfx.SDK.Core.sln /p:Configuration=Release /p:Outdir=Build

      - uses: vimtor/action-zip@v1
        with:
          files: Build/
          dest: ${{ env.ZipName }}

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.SEMVER }}
          release_name: ${{ env.SEMVER }}
          draft: false
          prerelease: false

      - name: Update release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .\${{ env.ZipName }}
          asset_name: ${{ env.ZipName }}
          asset_content_type: application/zip
      
      - name: Pack
        run: dotnet pack Nfx.SDK.Core.csproj -p:PackageVersion=${{ env.SEMVER }} --configuration Release
      
      - name: Push nuget package
        run: dotnet nuget push **/*.nupkg --skip-duplicate --source "https://api.nuget.org/v3/index.json" --api-key ${{secrets.nuget_api_key}}